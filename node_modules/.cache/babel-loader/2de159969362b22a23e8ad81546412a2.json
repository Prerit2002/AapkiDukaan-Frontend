{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n/**\r\n * Contains helpers for working with vendor prefixes.\r\n *\r\n * @example\r\n * const vendor = postcss.vendor\r\n *\r\n * @namespace vendor\r\n */\n\nvar vendor = {\n  /**\r\n   * Returns the vendor prefix extracted from an input string.\r\n   *\r\n   * @param {string} prop String with or without vendor prefix.\r\n   *\r\n   * @return {string} vendor prefix or empty string\r\n   *\r\n   * @example\r\n   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\r\n   * postcss.vendor.prefix('tab-size')      //=> ''\r\n   */\n  prefix: function prefix(prop) {\n    var match = prop.match(/^(-\\w+-)/);\n\n    if (match) {\n      return match[0];\n    }\n\n    return '';\n  },\n\n  /**\r\n     * Returns the input string stripped of its vendor prefix.\r\n     *\r\n     * @param {string} prop String with or without vendor prefix.\r\n     *\r\n     * @return {string} String name without vendor prefixes.\r\n     *\r\n     * @example\r\n     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\r\n     */\n  unprefixed: function unprefixed(prop) {\n    return prop.replace(/^-\\w+-/, '');\n  }\n};\nvar _default = vendor;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["vendor.es6"],"names":["vendor","prefix","match","prop","unprefixed"],"mappings":";;;;AAAA;;;;;;;;;AAQA,IAAIA,MAAM,GAAG;AAEX;;;;;;;;;;;AAWAC,EAAAA,MAbW,EAAA,SAAA,MAAA,CAAA,IAAA,EAaG;AACZ,QAAIC,KAAK,GAAGC,IAAI,CAAJA,KAAAA,CAAZ,UAAYA,CAAZ;;AACA,QAAA,KAAA,EAAW;AACT,aAAOD,KAAK,CAAZ,CAAY,CAAZ;AACD;;AAED,WAAA,EAAA;AAnBS,GAAA;;AAsBX;;;;;;;;;;AAUAE,EAAAA,UAhCW,EAAA,SAAA,UAAA,CAAA,IAAA,EAgCO;AAChB,WAAOD,IAAI,CAAJA,OAAAA,CAAAA,QAAAA,EAAP,EAAOA,CAAP;AACD;AAlCU,CAAb;eAsCeH,M","sourcesContent":["/**\n * Contains helpers for working with vendor prefixes.\n *\n * @example\n * const vendor = postcss.vendor\n *\n * @namespace vendor\n */\nlet vendor = {\n\n  /**\n   * Returns the vendor prefix extracted from an input string.\n   *\n   * @param {string} prop String with or without vendor prefix.\n   *\n   * @return {string} vendor prefix or empty string\n   *\n   * @example\n   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n   * postcss.vendor.prefix('tab-size')      //=> ''\n   */\n  prefix (prop) {\n    let match = prop.match(/^(-\\w+-)/)\n    if (match) {\n      return match[0]\n    }\n\n    return ''\n  },\n\n  /**\n     * Returns the input string stripped of its vendor prefix.\n     *\n     * @param {string} prop String with or without vendor prefix.\n     *\n     * @return {string} String name without vendor prefixes.\n     *\n     * @example\n     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n     */\n  unprefixed (prop) {\n    return prop.replace(/^-\\w+-/, '')\n  }\n\n}\n\nexport default vendor\n"]},"metadata":{},"sourceType":"script"}